---
openapi: 3.0.0
info:
  title: Lab Sys SW API
  description: This is a simple API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/MIKAELARNEZ/Lab_Sys_Sw/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /api/login:
    post:
      summary: creates login
      description: creates a cookie in UFRGS portal
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        "200":
          description: cookie created
          headers:
            set-cookie:
              $ref: '#/components/headers/set-cookie'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CookieSuccessResponse'
        "400":
          description: Either missing user/password or blocked by captcha
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CookieFailureResponse'
              example:
                message: Missing user
        "401":
          description: Invalid user/password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CookieFailureResponse'
              example:
                message: Invalid user/password
        "504":
          description: Unexpected response from UFRGS server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CookieFailureResponse'
              example:
                message: Error contacting UFRGS server
        "500":
          description: Unable to extract cookie from UFRGS response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CookieFailureResponse'
              example:
                message: Error extracting login result
  /api/classes:
    post:
      summary: Gets reference to possible classes
      description: Creates a code referencing a map of classes
      operationId: startClasses
      responses:
        "200":
          description: Started async processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassesSuccessResponse'
        "400":
          description: Found no class possibilities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassesFailureResponse'
              example:
                message: No available classes
        "401":
          description: Cookie needs refreshing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassesFailureResponse'
              example:
                message: Outdated cookie
        "501":
          description: Error in the UFRGS server connection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassesFailureResponse'
              example:
                message: Error contacting UFRGS
                content: Bad status 404
        "502":
          description: Unexpected html from UFRGS response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassesFailureResponse'
              example:
                message: Error parsing UFRGS response
        "500":
          description: Catch all error for other erros
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassesFailureResponse'
              example:
                message: Internal server error
      security:
      - cookieAuth: []
  /api/classes/{key}:
    get:
      summary: Gets class schedule
      description: Consults classes based on previously generated /api/classes async processing code
      operationId: retrieveClasses
      parameters:
      - name: key
        in: path
        description: Async processing key
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successfully read already processed classes. See ./documentation/example_outputs/retrieveClasses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassesContent'
        "400":
          description: Key was not created by POST /api/classes endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassesFailureResponse'
              example:
                message: Key was not previously created
        "401":
          description: Key either missing or NaN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassesFailureResponse'
              example:
                message: Missing or invalid key
        "500":
          description: Catch all error for other erros
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassesFailureResponse'
              example:
                message: Internal server error
components:
  schemas:
    Login:
      required:
      - password
      - user
      type: object
      properties:
        user:
          type: string
          example: "00123456"
        password:
          type: string
          example: my password
    CookieSuccessResponse:
      type: object
      properties:
        message:
          type: string
          description: Not relevant
          example: ""
        content:
          $ref: '#/components/schemas/CookieSuccessResponse_content'
    CookieFailureResponse:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Short message of what error ocurrred
          example: Something something error message
        content:
          type: object
          description: Either null or potentially invalid cookie
    ClassesSuccessResponse:
      type: object
      properties:
        message:
          type: string
          description: Not relevant
          example: Ok
        content:
          type: number
          description: Code representing async request processing
          example: 123
    ClassesFailureResponse:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Short message of what error ocurrred
          example: Something something error message
        content:
          type: object
          description: Either null or potentially invalid cookie
    ClassesContent:
      properties:
        message:
          type: string
          description: Not relevant
          example: Ok
        content:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClassesContent_content'
          description: Map of class names to timeslots
    CollegeClass:
      type: object
      properties:
        timeslots:
          type: array
          items:
            $ref: '#/components/schemas/Timeslot'
        credits:
          type: number
          example: 4
        classPlan:
          type: string
          example: http://www1.ufrgs.br/link/to/class/plan.pdf
    Timeslot:
      type: object
      properties:
        classIdentifier:
          type: string
          example: A
        availableSlots:
          type: number
          example: 20
        professors:
          type: array
          example:
          - professor1
          - professor2
          items:
            type: string
        scheduledTimes:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleTime'
    ScheduleTime:
      type: object
      properties:
        day:
          type: string
          example: Quinta
        startTime:
          type: string
          example: 08:30
        endTime:
          type: string
          example: 10:10
        location:
          type: string
          example: SALA 123 - PRÃ‰DIO 567
        locationMap:
          type: string
          format: url
    CookieSuccessResponse_content:
      type: object
      properties:
        value:
          type: string
          description: Copy of set-cookie header
          example: PHPSESSID=abc123; path=/
    ClassesContent_content:
      type: object
      properties:
        key:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/CollegeClass'
  headers:
    set-cookie:
      description: Cookie required to be part of any future requests
      style: simple
      explode: false
      schema:
        type: string
  securitySchemes:
    cookieAuth:
      type: apiKey
      name: PHPSESSID
      in: cookie
